}
# make a new data frame joining all results
df <- read_thembisa_results(intervention_years)
df <- df %>%
pivot_wider(names_from = indicator) %>%
mutate(TotalAIDSdeathsadult = AIDSdeathsAdultF + AIDSdeathsAdultM) %>%
pivot_longer(-(intervention_year:scenario), names_to = "indicator")
# save results
write.csv(df, "results/df.csv", row.names = FALSE)
df <- read.csv("results/df.csv")
# testing
plot_outputs_with_uncertainty("TotalHIVtests") + ggtitle ("50% testing reduction in 2025 or 2035 \n1% ART interruption rate reduction per year from 2025") +
scale_y_continuous("Number of HIV tests (millions)", breaks = c(0, 10e6, 20e6, 30e6), labels = c(0, 10, 20, 30))
# condom usage coverage
plot_outputs_with_uncertainty("CondomUse15to24F") + ggtitle ("0% testing reduction \n0.25% Condom usage reduction per year from 2025") +
ylab("Proportion of females aged 15-24 who used condoms at last sex")
plot_outputs_with_uncertainty("CondomUse25to49F") + ggtitle ("0% testing reduction \n0.25% Condom usage reduction per year from 2025") +
ylab("Propportion of females aged 15-24 who used condoms at last sex")
View(df)
>>>>>>> Stashed changes
source(here("R/support_modify_inputs.R"))
# Read in input in Thembisa format
data <- readLines(here("THEMBISAv18/Rollout_Original.txt"))
# Create data dictionary and save to manually add names
rollout_dictionary <- create_data_dictionary(data)
dir.create(here("data_dictionaries"), FALSE, TRUE)
filepath <- "data_dictionaries/rollout.csv"
# Manually add in descriptive names for each row of data
# vector of names
dict_names <- c("rate_first_test_neg_fem_under_25",
"adults_tested",
"kids_5_to_14_yr_tested",
"prop_pos_oi_diag",
"rate_reg_test_sex_workers",
"rate_reg_test_15_to_19_yr",
"rate_reg_test_20_to_24_yr",
"rate_reg_test_25_to_49_yr",
"rate_reg_test_over_50_yr",
"rate_reg_test_preg_women",
"pct_inf_pos_mother_6_wk_scrn",
"pct_inf_pos_mother_pcr",
"prop_kids_test_18_mths",
"rate_hct_home_based",
"self_kits_dist_strat_1",
"self_kits_dist_strat_2",
"self_kits_dist_strat_3",
"self_kits_dist_strat_4",
"self_kits_dist_strat_5",
"self_kits_dist_strat_6",
"pct_preg_women_tested",
"pct_pmtct_offering_azt_nvp",
"pct_clinics_rescrn_late_preg",
"pct_women_rescrn_6_week_visit",
"pct_diag_untreated_nvp_during_bf",
"pct_preg_women_eligible_opt_b",
"pct_hiv_diag_no_bf",
"pct_incr_art_dur_if_art_in_preg",
"males_over_15_yr_start_art",
"females_over_15_yr_start_art",
"kids_under_15_yr_start_art",
"rate_art_init_fem_cd4_under_200",
"rate_art_init_kids_adv_hiv",
"rel_rate_art_by_year",
"pct_pulm_tb_cd4_low_elig_art",
"pct_pulm_tb_cd4_med_elig_art",
"pct_who_stage_3_elig_art",
"pct_preg_women_cd4_low_elig_art",
"pct_preg_women_cd4_med_elig_art",
"pct_asymp_non_preg_cd4_low_eilg_art",
"pct_asymp_non_preg_cd4_med_eilg_art",
"pct_asymp_non_preg_cd4_high_eilg_art",
"pct_pos_inf_elig_art",
"pct_pos_kids_1_to_4_elig_art",
"pct_pos_kids_5_to_14_elig_art",
"pct_new_diag_preg_women_start_art",
"pct_new_diag_oi_start_art",
"pct_new_diag_other_adult_start_art",
"pct_new_diag_kids_start_art_soon",
"pct_adults_cd4_low_start_art",
"pct_kids_on_art_vir_supp",
"total_start_prep",
"rel_rate_prep_msm_over_20",
"rel_rate_prep_women_over_20",
"prop_msm_elig_prep",
"prop_agyw_elig_prep",
"prop_other_risk_grps_elig_prep",
"rate_prep_init_preg_women",
"rate_vm_init_sex_workers",
"rate_vm_init_15_to_19_yr",
"rate_vm_init_20_to_24_yr",
"rate_vm_init_24_to_49_yr",
"rate_vm_init_over_50_yr",
"rate_vm_init_preg_women",
"mmc_performed",
"rel_rate_mmc_10_to_14_yr",
"rel_rate_mmc_15_to_19_yr",
"rel_rate_mmc_20_to_24_yr",
"rel_rate_mmc_25_to_49_yr",
"rel_rate_mmc_over_50_yr",
"pct_early_inf_mc",
"reduction_condom_fsw",
"reduction_condom_st",
"reduction_condom_lt")
# assign names to dictionary
for (i in 1:length(rollout_dictionary$name)) {
rollout_dictionary$name[i] <- dict_names[i]
}
# save data dictionary with names
save_dictionary(rollout_dictionary, filepath)
# Read in dictionary with data names
dictionary <- read.csv(filepath)
# Format data for easy modification in R
formatted_data <- format_data(data, dictionary)
View(formatted_data)
formatted_data$data
type(formatted_data$data)
mat[c(1:4, rep(4, 3), ]
mat <- matrix(1:4, 2, 2)
mat[c(1:4, rep(4, 3), ]
mat[c(1:4, rep(4, 3),)]
mat[c(1:4, rep(4, 3)),]
mat
mat[c(1:2), rep(2,3),]
mat[c(1:2, rep(2, 3)), ]
n <- nrow(formatted_data$data)
n
extended_year = 2100
y <- extended_year - 2070
y
idx <- c(seq_len(n), rep(n ,y))
idx
class(formatted_data$data)
formatted_data$data[idx,]
source(here("R/support_modify_inputs.R"))
# Read in input in Thembisa format
data <- readLines(here("THEMBISAv18/Rollout_Original.txt"))
# Create data dictionary and save to manually add names
rollout_dictionary <- create_data_dictionary(data)
dir.create(here("data_dictionaries"), FALSE, TRUE)
filepath <- "data_dictionaries/rollout.csv"
# Manually add in descriptive names for each row of data
# vector of names
dict_names <- c("rate_first_test_neg_fem_under_25",
"adults_tested",
"kids_5_to_14_yr_tested",
"prop_pos_oi_diag",
"rate_reg_test_sex_workers",
"rate_reg_test_15_to_19_yr",
"rate_reg_test_20_to_24_yr",
"rate_reg_test_25_to_49_yr",
"rate_reg_test_over_50_yr",
"rate_reg_test_preg_women",
"pct_inf_pos_mother_6_wk_scrn",
"pct_inf_pos_mother_pcr",
"prop_kids_test_18_mths",
"rate_hct_home_based",
"self_kits_dist_strat_1",
"self_kits_dist_strat_2",
"self_kits_dist_strat_3",
"self_kits_dist_strat_4",
"self_kits_dist_strat_5",
"self_kits_dist_strat_6",
"pct_preg_women_tested",
"pct_pmtct_offering_azt_nvp",
"pct_clinics_rescrn_late_preg",
"pct_women_rescrn_6_week_visit",
"pct_diag_untreated_nvp_during_bf",
"pct_preg_women_eligible_opt_b",
"pct_hiv_diag_no_bf",
"pct_incr_art_dur_if_art_in_preg",
"males_over_15_yr_start_art",
"females_over_15_yr_start_art",
"kids_under_15_yr_start_art",
"rate_art_init_fem_cd4_under_200",
"rate_art_init_kids_adv_hiv",
"rel_rate_art_by_year",
"pct_pulm_tb_cd4_low_elig_art",
"pct_pulm_tb_cd4_med_elig_art",
"pct_who_stage_3_elig_art",
"pct_preg_women_cd4_low_elig_art",
"pct_preg_women_cd4_med_elig_art",
"pct_asymp_non_preg_cd4_low_eilg_art",
"pct_asymp_non_preg_cd4_med_eilg_art",
"pct_asymp_non_preg_cd4_high_eilg_art",
"pct_pos_inf_elig_art",
"pct_pos_kids_1_to_4_elig_art",
"pct_pos_kids_5_to_14_elig_art",
"pct_new_diag_preg_women_start_art",
"pct_new_diag_oi_start_art",
"pct_new_diag_other_adult_start_art",
"pct_new_diag_kids_start_art_soon",
"pct_adults_cd4_low_start_art",
"pct_kids_on_art_vir_supp",
"total_start_prep",
"rel_rate_prep_msm_over_20",
"rel_rate_prep_women_over_20",
"prop_msm_elig_prep",
"prop_agyw_elig_prep",
"prop_other_risk_grps_elig_prep",
"rate_prep_init_preg_women",
"rate_vm_init_sex_workers",
"rate_vm_init_15_to_19_yr",
"rate_vm_init_20_to_24_yr",
"rate_vm_init_24_to_49_yr",
"rate_vm_init_over_50_yr",
"rate_vm_init_preg_women",
"mmc_performed",
"rel_rate_mmc_10_to_14_yr",
"rel_rate_mmc_15_to_19_yr",
"rel_rate_mmc_20_to_24_yr",
"rel_rate_mmc_25_to_49_yr",
"rel_rate_mmc_over_50_yr",
"pct_early_inf_mc",
"reduction_condom_fsw",
"reduction_condom_st",
"reduction_condom_lt")
# assign names to dictionary
for (i in 1:length(rollout_dictionary$name)) {
rollout_dictionary$name[i] <- dict_names[i]
}
# save data dictionary with names
save_dictionary(rollout_dictionary, filepath)
# Read in dictionary with data names
dictionary <- read.csv(filepath)
# Format data for easy modification in R
formatted_data <- format_data(data, dictionary)
n
y <- extended_year - 1985 + n
y
y <- extended_year - (1985 + n)
y
(1985 + n
1985 + n
1985 + n
1985 + (n-1)
n <- nrow(formatted_data$data)
n
y <- extended_year - (1985 + (n-1))
y
idx <- c(seq_len(n), rep(n ,y))
idx
formatted_data$data <- formatted_data$data[idx,]
formatted_data
n <- nrow(formatted_data$data)
n
extend_rollout <- function(fomatted_data, extended_year){
n <- nrow(formatted_data$data)
y <- extended_year - (1985 + (n-1))
idx <- c(seq_len(n), rep(n ,y))
formatted_data$data <- formatted_data$data[idx,]
formatted_data
}
# Format data for easy modification in R
formatted_data <- format_data(data, dictionary)
extend_rollout <- function(fomatted_data, extended_year){
n <- nrow(formatted_data$data)
y <- extended_year - (1985 + (n-1))
idx <- c(seq_len(n), rep(n ,y))
formatted_data$data <- formatted_data$data[idx,]
formatted_data
}
extend_rollout(fomatted_data, 2100)
formatted_data <- extend_rollout(fomatted_data, 2100)
rollout <- convert_to_thembisa_format(formatted_data)
rollout <- convert_to_thembisa_format(formatted_data, data, dictionary)
output_names <- c("TotalHIVtests", "NewAdultHIV",
"AIDSdeathsAdultM", "AIDSdeathsAdultF","TotSexActs",
"SWsexActs", "TotProtSexActs", "SWsexActsProt")
data <- readLines(here("THEMBISAv18/Rollout_Original.txt"))
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(here)
source(here("R/support_modify_inputs.R"))
source(here("scripts/modify_rollout.R"))
source(here("R/read_and_run.R"))
extend_rollout <- function(fomatted_data, extended_year){
n <- nrow(formatted_data$data)
y <- extended_year - (1985 + (n-1))
idx <- c(seq_len(n), rep(n ,y))
formatted_data$data <- formatted_data$data[idx,]
formatted_data
}
data <- readLines(here("THEMBISAv18/Rollout_Original.txt"))
formatted_data <- format_data(data, dictionary)
formatted_data <- extend_rollout(fomatted_data, 2100)
rollout <- convert_to_thembisa_format(formatted_data, data, dictionary)
write(rollout, "THEMBISAv18/Rollout.txt")
## compile and model
run_thembisa()
temp <- read_thembisa_scenario(output_names)
View(temp)
## compile and model
run_thembisa()
temp <- read_thembisa_scenario(output_names)
View(temp)
View(temp)
write(rollout, "THEMBISAv18/Rollout.txt")
## compile and model
run_thembisa()
temp <- read_thembisa_scenario(output_names)
View(temp)
## compile and model
run_thembisa()
temp <- read_thembisa_scenario(output_names)
read_thembisa_output <- function(output_name){
output_txt <- paste(output_name, "txt", sep = ".")
output_txt <- paste("THEMBISAv18", output_txt, sep = "/")
output <- read.delim(output_txt, header=FALSE, row.names = 1)
output <- output %>% select(-V2)
t_output <- t(output)
output_new <- as.data.frame(as_tibble(t_output))
names(output_new) <- seq_along(output_new)
output_new$year <- seq(1985, 2100)
pivot_longer(output_new, -year, names_to = "parameter_set")
}
temp <- read_thembisa_scenario(output_names)
View(temp)
1.14768e+01
1.33231e+01
## compile and model
run_thembisa()
temp <- read_thembisa_scenario(output_names)
View(temp)
output_names <- c("TotalHIVtests", "NewAdultHIV",
"AIDSdeathsAdultM", "AIDSdeathsAdultF","TotSexActs",
"SWsexActs", "TotProtSexActs", "SWsexActsProt")
dir.create("results", FALSE, TRUE)
# establish intervention years
intervention_years <- seq(2025, 2050, 5)
#### 100% reduction ####
# proportion of base rate by which to reduce
base_rate_reduction = 0.5 # I want to test this with no changes to the testing rate first
# run baseline model
baseline <- run_thembisa_scenario(NA, output_names, base_rate_reduction = base_rate_reduction)
# save baseline outputs
write.csv(baseline, "results/baseline.csv", row.names = FALSE)
# for loop that changes testing rate at different years and saves outputs
for (intervention_year in intervention_years){
one_scenario <- run_thembisa_scenario(intervention_year, output_names, base_rate_reduction = base_rate_reduction)
write.csv(one_scenario, paste0("results/scenario_", intervention_year, ".csv"),
row.names = FALSE)
}
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(here)
source(here("R/support_modify_inputs.R"))
source(here("scripts/modify_rollout.R"))
source(here("R/read_and_run.R"))
extend_rollout <- function(fomatted_data, extended_year){
n <- nrow(formatted_data$data)
y <- extended_year - (1985 + (n-1))
idx <- c(seq_len(n), rep(n ,y))
formatted_data$data <- formatted_data$data[idx,]
formatted_data
}
data <- readLines(here("THEMBISAv18/Rollout_Original.txt"))
formatted_data <- format_data(data, dictionary)
formatted_data <- extend_rollout(fomatted_data, 2100)
rollout <- convert_to_thembisa_format(formatted_data, data, dictionary)
write(rollout, "THEMBISAv18/Rollout_Original.txt")
## compile and model
run_thembisa()
temp <- read_thembisa_scenario(output_names)
View(temp)
data <- readLines(here("THEMBISAv18/Rollout_Original.txt"))
formatted_data <- format_data(data, dictionary)
data <- readLines(here("THEMBISAv18/Rollout_Original.txt"))
formatted_data <- format_data(data, dictionary)
formatted_data <- extend_rollout(fomatted_data, 2100)
data <- readLines(here("THEMBISAv18/Rollout_Original.txt"))
formatted_data <- format_data(data, dictionary)
data <- readLines(here("THEMBISAv18/Rollout_Original.txt"))
formatted_data <- format_data(data, dictionary)
## Convert Thembisa inputs into easily modifiable format
format_data <- function(data, dictionary, start_year = 1985, end_year = 2100) {
## Split each line into a vector, using tabs as separators
data <- strsplit(data, "\t")
## Convert data from characters to numbers
x <- as.numeric(unlist(data[dictionary$line_data]))
## Arrange in a matrix with one column per data set
ret <- matrix(x, ncol = nrow(dictionary))
colnames(ret) <- dictionary$name
## Add column indicating year of data
year <- seq(start_year, end_year)
if (length(year) != nrow(ret)) {
stop("number of data entries does not match year range provided")
}
list(year = year,
data = ret)
}
data <- readLines(here("THEMBISAv18/Rollout_Original.txt"))
formatted_data <- format_data(data, dictionary)
## compile and model
run_thembisa()
temp <- read_thembisa_scenario(output_names)
formatted_data <- format_data(data, dictionary)
formatted_data <- extend_rollout(fomatted_data, 2100)
rollout <- convert_to_thembisa_format(formatted_data, data, dictionary)
write(rollout, "THEMBISAv18/Rollout_Original.txt")
## compile and model
run_thembisa()
temp <- read_thembisa_scenario(output_names)
View(temp)
data <- readLines(here("THEMBISAv18/Rollout_Original.txt"))
formatted_data <- format_data(data, dictionary)
formatted_data <- extend_rollout(fomatted_data, 2100)
rollout <- convert_to_thembisa_format(formatted_data, data, dictionary)
write(rollout, "THEMBISAv18/Rolloutl.txt")
write(rollout, "THEMBISAv18/Rollout.txt")
## compile and model
run_thembisa()
View(temp)
temp <- read_thembisa_scenario(output_names)
View(temp)
write(rollout, "THEMBISAv18/Rollout_Original.txt")
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(here)
source(here("R/support_modify_inputs.R"))
source(here("scripts/modify_rollout.R"))
source(here("R/read_and_run.R"))
output_names <- c("TotalHIVtests", "NewAdultHIV",
"AIDSdeathsAdultM", "AIDSdeathsAdultF","TotSexActs",
"SWsexActs", "TotProtSexActs", "SWsexActsProt")
dir.create("results", FALSE, TRUE)
# establish intervention years
intervention_years <- seq(2025, 2050, 5)
#### 100% reduction ####
# proportion of base rate by which to reduce
base_rate_reduction = 0.5 # I want to test this with no changes to the testing rate first
# run baseline model
baseline <- run_thembisa_scenario(NA, output_names, base_rate_reduction = base_rate_reduction)
# save baseline outputs
write.csv(baseline, "results/baseline.csv", row.names = FALSE)
View(baseline)
# for loop that changes testing rate at different years and saves outputs
for (intervention_year in intervention_years){
one_scenario <- run_thembisa_scenario(intervention_year, output_names, base_rate_reduction = base_rate_reduction)
write.csv(one_scenario, paste0("results/scenario_", intervention_year, ".csv"),
row.names = FALSE)
}
one_scenario <- run_thembisa_scenario(intervention_year, output_names, base_rate_reduction = base_rate_reduction)
one_scenario <- run_thembisa_scenario(intervention_year, output_names, base_rate_reduction = base_rate_reduction)
## read in input parameter file
data <- readLines(here("THEMBISAv18/Rollout_Original.txt"))
## write unedited input parameter file
formatted_data <- format_data(data, dictionary)
if (!is.na(intervention_year)){
formatted_data <- edit_formatted_data_incremental("reduction_condom_st",
new_values = 1 * base_rate_reduction,
starting_year = intervention_year)
}
formatted_data <- edit_formatted_data_incremental("reduction_condom_st",
new_values = 1 * base_rate_reduction,
starting_year = intervention_year)
# select parameter using dictionary
parameter <- formatted_data$data[,which(dictionary$name == parameter_name)]
parameters_name <- "reduction_condom_st"
# select parameter using dictionary
parameter <- formatted_data$data[,which(dictionary$name == parameter_name)]
View(dictionary)
parameters_name <- "reduction_condom_st"
# select parameter using dictionary
parameter <- formatted_data$data[,which(dictionary$name == parameter_name)]
# select parameter using dictionary
parameter <- formatted_data$data[,which(dictionary$name == "reduction_condom_st")]
# Edit value
for (i in ((starting_year+1)-1985):((starting_year+1)-1985)){
parameter[i] <- 0.2877 - ((0.2877 - new_values) * 0.5)
}
starting_year=1985
final_year=2100
# Edit value
for (i in ((starting_year+1)-1985):((starting_year+1)-1985)){
parameter[i] <- 0.2877 - ((0.2877 - new_values) * 0.5)
}
new_values <- 0.1
# Edit value
for (i in ((starting_year+1)-1985):((starting_year+1)-1985)){
parameter[i] <- 0.2877 - ((0.2877 - new_values) * 0.5)
}
for (i in ((starting_year+2)-1985):((final_year+1)-1985)){
parameter[i] <- new_values
}
# reassign to formatted data
parameter -> formatted_data$data[,which(dictionary$name == parameter_name)]
# select parameter using dictionary
parameter -> formatted_data$data[,which(dictionary$name == "reduction_condom_st")]
## read in input parameter file
data <- readLines(here("THEMBISAv18/Rollout_Original.txt"))
## write unedited input parameter file
formatted_data <- format_data(data, dictionary)
formatted_data <- edit_formatted_data_incremental("reduction_condom_st",
new_values = 1 * base_rate_reduction,
starting_year = intervention_year)
formatted_data <- edit_formatted_data_incremental("reduction_condom_st",
new_values =base_rate_reduction,
starting_year = intervention_year)
formatted_data <- edit_formatted_data("reduction_condom_st",
new_values = base_rate_reduction,
starting_year = intervention_year)
base_rate_reduction
intervention_year
formatted_data <- edit_formatted_data("reduction_condom_st",
new_values = base_rate_reduction,
starting_year = intervention_year)
