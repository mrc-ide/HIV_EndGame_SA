geom_line(aes(colour = intervention_year), show.legend = F) +
xlab("") +
ylab("Number of HIV tests") +
expand_limits(y=0) + theme_classic() + theme(axis.text = element_text(size = 14), axis.title.y = element_text(size = 14), axis.title.x = element_text(size = 14)) +
scale_color_manual(" ", values = c("red", "blue")) +
scale_fill_manual(" ", values = c("red", "blue")) +
scale_y_continuous("Percentage of total sex acts that used condom (%)")
condom_usage_summary %>%
mutate(intervention_year = as.factor(intervention_year)) %>%
filter(test_reduction == 0, intervention_year != 2050) %>%
ggplot(aes(year, mean, group = intervention_year, fill = intervention_year)) +
geom_ribbon(aes(ymin = lower_CI, ymax = upper_CI, fill = intervention_year), alpha = 0.25, show.legend = F) +
geom_line(aes(colour = intervention_year), show.legend = F) +
xlab("") +
ylab("Number of HIV tests") +
expand_limits(y=0) + theme_classic() + theme(axis.text = element_text(size = 14), axis.title.y = element_text(size = 14), axis.title.x = element_text(size = 14)) +
scale_color_manual(" ", values = c("red", "blue")) +
scale_fill_manual(" ", values = c("red", "blue")) +
scale_y_continuous("Sex acts that used condom (%)")
# example plot
plot_hiv_inc_from_summary(condom_usage_inc, 2025, 0)
# example plot
plot_hiv_inc_from_summary(condom_usage_inc, 2025, 20)
df %>%
mutate(intervention_year = as.factor(intervention_year)) %>%
filter(intervention_year == reduction_year, #2099 reduction is used as a baseline / no reduction
test_reduction == pitc_reduction | test_reduction == 0) %>% #pitc_reduction is used to show the percentage reduced - 100% = complete cessation
# mutate(test_reduction = factor(test_reduction, levels = c(pitc_reduction, 0))) %>%
ggplot(aes(year, mean, group = test_reduction)) +
geom_ribbon(aes(ymin = lower_CI, ymax = upper_CI, fill = test_reduction), alpha = 0.25, show.legend = F) +
geom_line(aes(colour = test_reduction), show.legend = F) +
geom_hline(aes(yintercept = 0.001), lty = 2, colour = 1) +
xlab(" ") +
expand_limits(y=0) + theme_classic() + theme(axis.text = element_text(size = 14), axis.title.y = element_text(size = 14), axis.title.x = element_text(size = 14)) +
scale_colour_manual(" ", values = c("blue", "red")) +
scale_fill_manual(" ", values = c("blue", "red")) +
scale_y_continuous("HIV incidence rate per 1000 (15-49y)",
labels = (function(l) {round(l*1e3,2)}),breaks = c(0, 0.0010, 0.0050, 0.010, 0.015, 0.020)) +
ggtitle("")
plot_hiv_inc_from_summary <- function(df, reduction_year, pitc_reduction){
df %>%
mutate(intervention_year = as.factor(intervention_year)) %>%
filter(intervention_year == reduction_year, #2099 reduction is used as a baseline / no reduction
test_reduction == pitc_reduction | test_reduction == 0) %>% #pitc_reduction is used to show the percentage reduced - 100% = complete cessation
# mutate(test_reduction = factor(test_reduction, levels = c(pitc_reduction, 0))) %>%
ggplot(aes(year, mean, group = test_reduction)) +
geom_ribbon(aes(ymin = lower_CI, ymax = upper_CI, fill = test_reduction), alpha = 0.25, show.legend = F) +
geom_line(aes(colour = test_reduction), show.legend = F) +
geom_hline(aes(yintercept = 0.001), lty = 2, colour = 1) +
xlab(" ") +
expand_limits(y=0) + theme_classic() + theme(axis.text = element_text(size = 14), axis.title.y = element_text(size = 14), axis.title.x = element_text(size = 14)) +
scale_colour_manual(" ", values = c("blue", "red")) +
scale_fill_manual(" ", values = c("blue", "red")) +
scale_y_continuous("HIV incidence rate per 1000 (15-49y)",
labels = (function(l) {round(l*1e3,2)}),breaks = c(0, 0.0010, 0.0050, 0.010, 0.015, 0.020)) +
ggtitle("")
}
# example plot
plot_hiv_inc_from_summary(condom_usage_inc, 2025, 20)
df %>%
mutate(intervention_year = as.factor(intervention_year)) %>%
filter(intervention_year == reduction_year, #2099 reduction is used as a baseline / no reduction
test_reduction == pitc_reduction | test_reduction == 0) %>% #pitc_reduction is used to show the percentage reduced - 100% = complete cessation
mutate(test_reduction = factor(test_reduction, levels = c(pitc_reduction, 0))) %>%
ggplot(aes(year, mean, group = test_reduction)) +
geom_ribbon(aes(ymin = lower_CI, ymax = upper_CI, fill = test_reduction), alpha = 0.25, show.legend = F) +
geom_line(aes(colour = test_reduction), show.legend = F) +
geom_hline(aes(yintercept = 0.001), lty = 2, colour = 1) +
xlab(" ") +
expand_limits(y=0) + theme_classic() + theme(axis.text = element_text(size = 14), axis.title.y = element_text(size = 14), axis.title.x = element_text(size = 14)) +
scale_colour_manual(" ", values = c("blue", "red")) +
scale_fill_manual(" ", values = c("blue", "red")) +
scale_y_continuous("HIV incidence rate per 1000 (15-49y)",
labels = (function(l) {round(l*1e3,2)}),breaks = c(0, 0.0010, 0.0050, 0.010, 0.015, 0.020)) +
ggtitle("")
plot_hiv_inc_from_summary <- function(df, reduction_year, pitc_reduction){
df %>%
mutate(intervention_year = as.factor(intervention_year)) %>%
filter(intervention_year == reduction_year, #2099 reduction is used as a baseline / no reduction
test_reduction == pitc_reduction | test_reduction == 0) %>% #pitc_reduction is used to show the percentage reduced - 100% = complete cessation
mutate(test_reduction = factor(test_reduction, levels = c(pitc_reduction, 0))) %>%
ggplot(aes(year, mean, group = test_reduction)) +
geom_ribbon(aes(ymin = lower_CI, ymax = upper_CI, fill = test_reduction), alpha = 0.25, show.legend = F) +
geom_line(aes(colour = test_reduction), show.legend = F) +
geom_hline(aes(yintercept = 0.001), lty = 2, colour = 1) +
xlab(" ") +
expand_limits(y=0) + theme_classic() + theme(axis.text = element_text(size = 14), axis.title.y = element_text(size = 14), axis.title.x = element_text(size = 14)) +
scale_colour_manual(" ", values = c("blue", "red")) +
scale_fill_manual(" ", values = c("blue", "red")) +
scale_y_continuous("HIV incidence rate per 1000 (15-49y)",
labels = (function(l) {round(l*1e3,2)}),breaks = c(0, 0.0010, 0.0050, 0.010, 0.015, 0.020)) +
ggtitle("")
}
# example plot
plot_hiv_inc_from_summary(condom_usage_inc, 2025, 20)
plot_hiv_inc_from_summary <- function(df, reduction_year, pitc_reduction){
df %>%
mutate(intervention_year = as.factor(intervention_year)) %>%
filter(intervention_year == reduction_year, #2099 reduction is used as a baseline / no reduction
test_reduction == pitc_reduction | test_reduction == 0) %>% #pitc_reduction is used to show the percentage reduced - 100% = complete cessation
mutate(test_reduction = factor(test_reduction, levels = c(pitc_reduction, 0))) %>%
ggplot(aes(year, mean, group = test_reduction)) +
geom_ribbon(aes(ymin = lower_CI, ymax = upper_CI, fill = test_reduction), alpha = 0.25, show.legend = F) +
geom_line(aes(colour = test_reduction), show.legend = F) +
geom_hline(aes(yintercept = 0.001), lty = 2, colour = 1) +
xlab(" ") +
expand_limits(y=0) + theme_classic() + theme(axis.text = element_text(size = 14), axis.title.y = element_text(size = 14), axis.title.x = element_text(size = 14)) +
scale_colour_manual(" ", values = c("blue", "red")) +
scale_fill_manual(" ", values = c("blue", "red")) +
scale_y_continuous("HIV incidence rate per 1000 (15-49y)",
labels = (function(l) {round(l*1e3,2)}),breaks = c(0, 0.0010, 0.0050, 0.010, 0.015, 0.020)) +
ggtitle("")
}
# example plot
plot_hiv_inc_from_summary(condom_usage_inc, 2025, 20)
df %>%
mutate(intervention_year = as.factor(intervention_year)) %>%
filter(intervention_year == reduction_year, #2099 reduction is used as a baseline / no reduction
test_reduction == pitc_reduction | test_reduction == 0) %>% #pitc_reduction is used to show the percentage reduced - 100% = complete cessation
mutate(test_reduction = factor(test_reduction, levels = c(pitc_reduction, 0))) %>%
ggplot(aes(year, mean, group = test_reduction)) +
geom_ribbon(aes(ymin = lower_CI, ymax = upper_CI, fill = test_reduction), alpha = 0.25, show.legend = F) +
geom_line(aes(colour = test_reduction), show.legend = F) +
geom_hline(aes(yintercept = 0.001), lty = 2, colour = 1) +
xlab(" ") +
expand_limits(y=0) + theme_classic() + theme(axis.text = element_text(size = 14), axis.title.y = element_text(size = 14), axis.title.x = element_text(size = 14)) +
scale_colour_manual(" ", values = c("red", "blue")) +
scale_fill_manual(" ", values = c("red", "blue")) +
scale_y_continuous("HIV incidence rate per 1000 (15-49y)",
labels = (function(l) {round(l*1e3,2)}),breaks = c(0, 0.0010, 0.0050, 0.010, 0.015, 0.020)) +
ggtitle("")
plot_hiv_inc_from_summary <- function(df, reduction_year, pitc_reduction){
df %>%
mutate(intervention_year = as.factor(intervention_year)) %>%
filter(intervention_year == reduction_year, #2099 reduction is used as a baseline / no reduction
test_reduction == pitc_reduction | test_reduction == 0) %>% #pitc_reduction is used to show the percentage reduced - 100% = complete cessation
mutate(test_reduction = factor(test_reduction, levels = c(pitc_reduction, 0))) %>%
ggplot(aes(year, mean, group = test_reduction)) +
geom_ribbon(aes(ymin = lower_CI, ymax = upper_CI, fill = test_reduction), alpha = 0.25, show.legend = F) +
geom_line(aes(colour = test_reduction), show.legend = F) +
geom_hline(aes(yintercept = 0.001), lty = 2, colour = 1) +
xlab(" ") +
expand_limits(y=0) + theme_classic() + theme(axis.text = element_text(size = 14), axis.title.y = element_text(size = 14), axis.title.x = element_text(size = 14)) +
scale_colour_manual(" ", values = c("red", "blue")) +
scale_fill_manual(" ", values = c("red", "blue")) +
scale_y_continuous("HIV incidence rate per 1000 (15-49y)",
labels = (function(l) {round(l*1e3,2)}),breaks = c(0, 0.0010, 0.0050, 0.010, 0.015, 0.020)) +
ggtitle("")
}
# example plot
plot_hiv_inc_from_summary(condom_usage_inc, 2025, 20)
# example plot
plot_hiv_inc_from_summary(condom_usage_inc, 2025, 40)
# example plot
plot_hiv_inc_from_summary(condom_usage_inc, 2025, 60)
# example plot
plot_hiv_inc_from_summary(condom_usage_inc, 2025, 80)
# example plot
plot_hiv_inc_from_summary(condom_usage_inc, 2025, 100)
# example plot
plot_hiv_inc_from_summary(condom_usage_inc, 2050, 0)
# example plot
plot_hiv_inc_from_summary(condom_usage_inc, 2050, 20)
# example plot
plot_hiv_inc_from_summary(condom_usage_inc, 2050, 20)
# example plot
plot_hiv_inc_from_summary(condom_usage_inc, 2050, 40)
# example plot
plot_hiv_inc_from_summary(condom_usage_inc, 2050, 46)
# example plot
plot_hiv_inc_from_summary(condom_usage_inc, 2050, 60)
# example plot
plot_hiv_inc_from_summary(condom_usage_inc, 2050, 80)
# example plot
plot_hiv_inc_from_summary(condom_usage_inc, 2050, 100)
cumulative_values <- calc_all_cumulatives(intervention_years, 50)
cumulative_values <- cumulative_values %>%
pivot_wider(names_from = scenario, values_from = cumulative) %>%
mutate(percent_change = ((intervention - baseline)/baseline)*100) %>%
mutate(absolute_dif = intervention - baseline) %>%
pivot_longer(-(indicator:test_reduction), names_to = "scenario")
# Plotting cumulative HIV infections over 40 year
cumulative_values %>% filter(
scenario == "absolute_dif", indicator == "NewAdultHIV", intervention_year == 2025) %>%
group_by(indicator, intervention_year, test_reduction, scenario) %>%
summarise(mean = mean(value), upper_CI = quantile(value, probs = 0.975),
lower_CI = quantile(value, probs = 0.025)) %>%
mutate(intervention_year = as.factor(intervention_year)) %>%
ggplot(aes(test_reduction, mean)) +
geom_line(aes(), show.legend = F) +
geom_ribbon(aes(ymin = lower_CI, ymax = upper_CI), alpha = 0.10, show.legend = F) +
xlab("PITC reduction (%)") + scale_y_continuous("Additional HIV infections (millions)", labels = (function(l) {round(l/1e6,1)}))  +
# facet_wrap(nrow = 1, vars(indicator), scales = "free_y",
#            labeller = labeller(indicator = c(
#              "TotalAIDSdeathsadult" = "AIDS-related mortality",
#              "TotalHIVtests" = "Total HIV tests",
#              "NewAdultHIV" = "New HIV infections",
#              "SWsexActs" = "FSW sex acts",
#              "SWsexActsProt" = "Protected FSW sex acts",
#              "TotProtSexActs" = "Total protected sex acts",
#              "TotSexActs" = "Total sex acts"
#            ))) +
expand_limits(y=0) + theme_classic() + ggtitle(" ") + theme(axis.text = element_text(size = 14), axis.title.y = element_text(size = 14), axis.title.x = element_text(size = 14)) +
scale_fill_discrete("Condom usage \nreduction \nstart year") + scale_color_discrete("Condom usage \nreduction \nstart year")
df <- read.csv("results/condom_reduction_2030.csv") # this is read again so that test_reduction can be used as an integer
df$test_reduction <- 100 - as.integer(df$test_reduction)
cumulative_values <- calc_all_cumulatives(intervention_years, 50)
cumulative_values <- cumulative_values %>%
pivot_wider(names_from = scenario, values_from = cumulative) %>%
mutate(percent_change = ((intervention - baseline)/baseline)*100) %>%
mutate(absolute_dif = intervention - baseline) %>%
pivot_longer(-(indicator:test_reduction), names_to = "scenario")
# Plotting cumulative HIV infections over 40 year
cumulative_values %>% filter(
scenario == "absolute_dif", indicator == "NewAdultHIV", intervention_year == 2025) %>%
group_by(indicator, intervention_year, test_reduction, scenario) %>%
summarise(mean = mean(value), upper_CI = quantile(value, probs = 0.975),
lower_CI = quantile(value, probs = 0.025)) %>%
mutate(intervention_year = as.factor(intervention_year)) %>%
ggplot(aes(test_reduction, mean)) +
geom_line(aes(), show.legend = F) +
geom_ribbon(aes(ymin = lower_CI, ymax = upper_CI), alpha = 0.10, show.legend = F) +
xlab("PITC reduction (%)") + scale_y_continuous("Additional HIV infections (millions)", labels = (function(l) {round(l/1e6,1)}))  +
# facet_wrap(nrow = 1, vars(indicator), scales = "free_y",
#            labeller = labeller(indicator = c(
#              "TotalAIDSdeathsadult" = "AIDS-related mortality",
#              "TotalHIVtests" = "Total HIV tests",
#              "NewAdultHIV" = "New HIV infections",
#              "SWsexActs" = "FSW sex acts",
#              "SWsexActsProt" = "Protected FSW sex acts",
#              "TotProtSexActs" = "Total protected sex acts",
#              "TotSexActs" = "Total sex acts"
#            ))) +
expand_limits(y=0) + theme_classic() + ggtitle(" ") + theme(axis.text = element_text(size = 14), axis.title.y = element_text(size = 14), axis.title.x = element_text(size = 14)) +
scale_fill_discrete("Condom usage \nreduction \nstart year") + scale_color_discrete("Condom usage \nreduction \nstart year")
# Plotting cumulative HIV infections over 40 year
cumulative_values %>% filter(
scenario == "absolute_dif", indicator == "NewAdultHIV", intervention_year == 2050) %>%
group_by(indicator, intervention_year, test_reduction, scenario) %>%
summarise(mean = mean(value), upper_CI = quantile(value, probs = 0.975),
lower_CI = quantile(value, probs = 0.025)) %>%
mutate(intervention_year = as.factor(intervention_year)) %>%
ggplot(aes(test_reduction, mean)) +
geom_line(aes(), show.legend = F) +
geom_ribbon(aes(ymin = lower_CI, ymax = upper_CI), alpha = 0.10, show.legend = F) +
xlab("PITC reduction (%)") + scale_y_continuous("Additional HIV infections (millions)", labels = (function(l) {round(l/1e6,1)}))  +
# facet_wrap(nrow = 1, vars(indicator), scales = "free_y",
#            labeller = labeller(indicator = c(
#              "TotalAIDSdeathsadult" = "AIDS-related mortality",
#              "TotalHIVtests" = "Total HIV tests",
#              "NewAdultHIV" = "New HIV infections",
#              "SWsexActs" = "FSW sex acts",
#              "SWsexActsProt" = "Protected FSW sex acts",
#              "TotProtSexActs" = "Total protected sex acts",
#              "TotSexActs" = "Total sex acts"
#            ))) +
expand_limits(y=0) + theme_classic() + ggtitle(" ") + theme(axis.text = element_text(size = 14), axis.title.y = element_text(size = 14), axis.title.x = element_text(size = 14)) +
scale_fill_discrete("Condom usage \nreduction \nstart year") + scale_color_discrete("Condom usage \nreduction \nstart year")
View(calc_all_cumulatives)
# install.packages("drat") # installer for adding "mrc-ide"
# drat:::add("mrc-ide")
# install.packages("didehpc")
library(didehpc) # load the didehpc support package
# to edit the .rprofile load the following package
library(usethis)
# run this function
usethis::edit_r_profile()
# run this function
usethis::edit_r_profile()
# install.packages("drat") # installer for adding "mrc-ide"
# drat:::add("mrc-ide")
# install.packages("didehpc")
library(didehpc) # load the didehpc support package
# to edit the .rprofile load the following package
library(usethis)
# run this function
usethis::edit_r_profile()
# To see the configuration that will be run if you don't do anything (else), run:
didehpc::didehpc_config()
usethis::edit_r_profile()
options(
didehpc.username = "spr21",
didehpc.password = "Wednesday123!",
didehpc.home = "H:/HIV_EndGame_SA"
)
# To see the configuration that will be run if you don't do anything (else), run:
didehpc::didehpc_config()
# install.packages("drat") # installer for adding "mrc-ide"
# drat:::add("mrc-ide")
# install.packages("didehpc")
library(didehpc) # load the didehpc support package
# to edit the .rprofile load the following package
library(usethis)
# To see the configuration that will be run if you don't do anything (else), run:
didehpc::didehpc_config()
options(
didehpc.credentials = c(username = "spr21", password = "Wednesday123!"),
didehpc.home = "H:/HIV_EndGame_SA"
)
# install.packages("drat") # installer for adding "mrc-ide"
# drat:::add("mrc-ide")
# install.packages("didehpc")
library(didehpc) # load the didehpc support package
# to edit the .rprofile load the following package
library(usethis)
options(
didehpc.credentials = c(username = "spr21", password = "Wednesday123!"),
didehpc.home = "H:/HIV_EndGame_SA"
)
# To see the configuration that will be run if you don't do anything (else), run:
didehpc::didehpc_config()
# install.packages("drat") # installer for adding "mrc-ide"
# drat:::add("mrc-ide")
# install.packages("didehpc")
library(didehpc) # load the didehpc support package
# install.packages("drat") # installer for adding "mrc-ide"
# drat:::add("mrc-ide")
# install.packages("didehpc")
library(didehpc) # load the didehpc support package
# to edit the .rprofile load the following package
library(usethis)
usethis::edit_r_profile()
# To see the configuration that will be run if you don't do anything (else), run:
didehpc::didehpc_config()
options(
didehpc.username = "spr21",
didehpc.home = "H:/HIV_EndGame_SA"
)
# To see the configuration that will be run if you don't do anything (else), run:
didehpc::didehpc_config()
# install.packages("drat") # installer for adding "mrc-ide"
# drat:::add("mrc-ide")
# install.packages("didehpc")
library(didehpc) # load the didehpc support package
# to edit the .rprofile load the following package
library(usethis)
# To see the configuration that will be run if you don't do anything (else), run:
didehpc::didehpc_config()
# To see the configuration that will be run if you don't do anything (else), run:
didehpc::didehpc_config(password = "Wednesday123!")
# To see the configuration that will be run if you don't do anything (else), run:
didehpc::didehpc_config(credentials = (password = "Wednesday123!"))
didehpc::didehpc_config(credentials = c("spr21", "Wednesday123!"))
didehpc::didehpc_config(credentials = c(username = "spr21", password = "Wednesday123!"))
didehpc::didehpc_config(credentials = list(username = "spr21", password = "Wednesday123!"))
packages <- "ggplot2"
ctx <- context::context_save("contexts",
packages = packages)
obj <- didehpc::queue_didehpc(ctx)
obj$install_packages("ggplot2")
src <- conan::conan_sources(packages = packages)
ctx <- context::context_save("contexts",
packages = packages,
package_sources = src)
obj <- didehpc::queue_didehpc(ctx)
library(ggplot2)
obj <- didehpc::queue_didehpc(ctx)
ctx <- context::context_save("contexts",
package_sources = src)
obj <- didehpc::queue_didehpc(ctx)
obj$install_packages("ggplot2")
obj$install_packages("ggplot2")
obj <- didehpc::queue_didehpc(ctx)
obj <- didehpc::queue_didehpc(ctx)
ctx <- context::context_save(root, packages = c("rstan", "dplyr"))
obj <- didehpc::queue_didehpc(ctx)
library("dplyr")
install.packages(""dplyr"")
install.packages("dplyr")
library("dplyr")
ctx <- context::context_save(root, packages = c("rstan", "dplyr"))
ctx <- context::context_save(root, packages = c("rstan", "dplyr"))
obj <- didehpc::queue_didehpc(ctx)
library("rstan")
install.packages("rstan")
library("rstan")
ctx <- context::context_save(root, packages = c("rstan", "dplyr"))
obj <- didehpc::queue_didehpc(ctx)
library(R6)
ctx <- context::context_save(root, packages = c("rstan", "dplyr"))
ctx <- context::context_save(root, packages = c("rstan", "dplyr"))
obj <- didehpc::queue_didehpc(ctx)
didehpc::didehpc_config(credentials = list(username = "spr21", password = "Wednesday123!"))
config <- didehpc::didehpc_config(credentials = list(username = "spr21", password = "Wednesday123!"))
obj <- didehpc::queue_didehpc(context = ctx, config = config)
ctx <- context::context_save(root, packages = c("rstan", "dplyr"))
ctx <- context::context_save("contexts", packages = c("rstan", "dplyr"))
ctx <- context::context_save("contexts", packages = c("rstan", "dplyr"))
obj <- didehpc::queue_didehpc(context =ctx, config = config)
GETWD()
getwd()
# install.packages("drat") # installer for adding "mrc-ide"
# drat:::add("mrc-ide")
# install.packages("didehpc")
library(didehpc) # load the didehpc support package
config <- didehpc::didehpc_config(credentials = list(username = "spr21", password = "Wednesday123!"))
config
obj <- didehpc::queue_didehpc(context = ctx, config = config)
ctx <- context::context_save("contexts", packages = c("rstan", "dplyr"))
ctx <- context::context_save("contexts", packages = c("rstan", "dplyr"))
config
obj <- didehpc::queue_didehpc(context = ctx)
obj <- didehpc::queue_didehpc(context = ctx)
obj <- didehpc::queue_didehpc(context = ctx)
?context::context_save
obj <- didehpc::queue_didehpc(context = ctx, config = config)
config <- didehpc::didehpc_config(credentials = list(username = "spr21", password = "Wednesday123!"))
config
packages <- "ggplot2"
library(ggplot2)
library("dplyr")
library("rstan")
ctx <- context::context_save("contexts", packages = packages)
ctx <- context::context_save("contexts", packages = packages, sources = src)
src
ctx <- context::context_save("contexts", packages = packages, package_sources = src)
obj <- didehpc::queue_didehpc(context = ctx, config = config)
ctx <- context::context_save("contexts", packages = packages)
ctx <- context::context_save("contexts", packages = packages)
ctx <- context::context_save("contexts", packages = packages, package_sources = src)
obj <- didehpc::queue_didehpc(context = ctx, config = config)
obj <- didehpc::queue_didehpc(context = ctx)
obj <- didehpc::queue_didehpc(context = ctx)
sessionInfo()
obj
obj
obj <- didehpc::queue_didehpc(context = ctx)
obj <- didehpc::queue_didehpc(context = ctx)
obj <- didehpc::queue_didehpc(context = ctx)
obj <- didehpc::queue_didehpc(context = ctx, config = config)
ctx <- context::context_save("contexts")
obj <- didehpc::queue_didehpc(context = ctx, config = config)
# install.packages("drat") # installer for adding "mrc-ide"
# drat:::add("mrc-ide")
# install.packages("didehpc")
library(didehpc) # load the didehpc support package
# to edit the .rprofile load the following package
library(usethis)
config <- didehpc::didehpc_config(credentials = list(username = "spr21", password = "Wednesday123!"))
config
packages <- "ggplot2"
library(ggplot2)
library("dplyr")
library("rstan")
ctx <- context::context_save("contexts", packages = packages)
obj <- didehpc::queue_didehpc(context = ctx, config = config)
package_version("didehpc")
package_Version("didehpc")
package_Version("didehpc")
packageVersion("didehpc")
library(ggplot2)
library("dplyr")
ctx <- context::context_save("contexts", packages = packages)
ctx <- context::context_save("contexts")
obj <- didehpc::queue_didehpc(context = ctx)
obj <- didehpc::queue_didehpc(context = ctx)
obj <- didehpc::queue_didehpc(context = ctx)
ctx <- context::context_save("contexts")
obj <- didehpc::queue_didehpc(context = ctx)
ctx <- context::context_save("contexts")
ctx <- context::context_save("contexts")
ctx <- context::context_save("contexts")
ctx <- context::context_save("contexts")
obj <- didehpc::queue_didehpc(context = ctx)
library(pkgdepends)
ctx <- context::context_save("contexts")
obj <- didehpc::queue_didehpc(context = ctx)
ctx <- context::context_save("contexts")
obj <- didehpc::queue_didehpc(context = ctx)
config <- didehpc::didehpc_config(credentials = list(username = "spr21", password = "Wednesday123!"),r_version = "4.1.3")
config
ctx <- context::context_save("contexts")
ctx <- context::context_save("contexts")
obj <- didehpc::queue_didehpc(context = ctx)
config
config
ctx <- context::context_save("contexts")
ctx <- context::context_save("contexts")
obj <- didehpc::queue_didehpc(context = ctx)
config <- didehpc::didehpc_config(credentials = list(username = "spr21", password = "Wednesday123!"))
options(
didehpc.username = "spr21",
didehpc.home = "Q:"
)
# install.packages("drat") # installer for adding "mrc-ide"
# drat:::add("mrc-ide")
# install.packages("didehpc")
library(didehpc) # load the didehpc support package
# to edit the .rprofile load the following package
library(usethis)
usethis::edit_r_profile()
config <- didehpc::didehpc_config(credentials = list(username = "spr21", password = "Wednesday123!"))
config
setwd("~Q:/")
# install.packages("drat") # installer for adding "mrc-ide"
# drat:::add("mrc-ide")
# install.packages("didehpc")
library(didehpc) # load the didehpc support package
# to edit the .rprofile load the following package
library(usethis)
usethis::edit_r_profile()
config <- didehpc::didehpc_config(credentials = list(username = "spr21", password = "Wednesday123!"))
config
ctx <- context::context_save("contexts")
obj <- didehpc::queue_didehpc(context = ctx)
packages <- "ggplot2"
ctx <- context::context_save("contexts", packages = packages)
ctx <- context::context_save("contexts", packages = packages)
obj <- didehpc::queue_didehpc(context = ctx)
obj$install_packages("ggplot2")
t <- obj$enqueue(packageVersion("ggplot2"))
t$wait(10)
